LinearNon LinearAlgorithms:Search sortbruteforcedivide and conquer greedyrecursiondynamic programmingbacktrackinghashingrandomizedTheta -> avg caseOmega -> best caseHomework for 5th feb, dynamic programming , n queen List:List<datatype> list_name = new List<datatype> ();list_name.Add().Remove()    -> remove the value.RemoveAll()   -> at index, .RemoveAll(x => x%2 == 0).RemoveRange(starting,ending) starting inclusive , ending excluded.Clear().Capacity().Count()  -> number of elements in the list.Sort() STACK: LIFOCan store any type of data typeStack stack_name = new Stack();Stack<datatype> stackname = new Stack<datatype> ();.Push().pop().Peek()QUEUE:FIFOQueue qname = new Queue();.Enqueue();.Dequeue();.Peek();LINKEDLIST:Linkedlist<datatype> name = new Linkedlist<datatype> ();.AddFirst();.AddLast();.Remove();